// // cartSlice.ts (Redux Toolkit)

// import { createSlice, PayloadAction } from "@reduxjs/toolkit";
// import { Product } from "@/lib/api";

// // Define the initial state for the cart
// interface CartState {
//   items: Product[];
// }

// const initialState: CartState = {
//   items: [],
// };

// // Create a slice using createSlice
// const cartSlice = createSlice({
//   name: "cart", // Slice name (automatically used for action type prefix)
//   initialState,
//   reducers: {
//     // Action to add an item to the cart
//     addItem: (state, action: PayloadAction<Product>) => {
//       state.items.push(action.payload);
//     },
//     // Action to increase the quantity of an item
//     increase: (state, action: PayloadAction<{ id: number }>) => {
//       const item = state.items.find((item) => item.id === action.payload.id);
//       if (item) item.quantity += 1; // assuming quantity is a field in Product
//     },
//     // Action to decrease the quantity of an item
//     decrease: (state, action: PayloadAction<{ id: number }>) => {
//       const item = state.items.find((item) => item.id === action.payload.id);
//       if (item && item.quantity > 1) item.quantity -= 1; // Prevent quantity from going below 1
//     },
//     // Action to remove an item from the cart
//     removeItem: (state, action: PayloadAction<{ id: number }>) => {
//       state.items = state.items.filter((item) => item.id !== action.payload.id);
//     },
//     // Action to clear the cart
//     clear: (state) => {
//       state.items = [];
//     },
//     // Action to checkout (example, can be customized)
//     checkout: (state) => {
//       // Custom logic can be added here
//       console.log("Checking out", state.items);
//       state.items = []; // Example logic after checkout
//     },
//   },
// });

// // Export the actions automatically generated by createSlice
// export const { addItem, increase, decrease, removeItem, clear, checkout } =
//   cartSlice.actions;

// // Export the reducer to be used in the store
// export default cartSlice.reducer;
